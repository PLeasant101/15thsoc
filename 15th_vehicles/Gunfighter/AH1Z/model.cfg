
class cfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class AH1ZSkeleton : default
	{
		SkeletonBones[]=
		{
			"mainrotor",	"",
			"tailrotor",	"",
			"alt",	"",
			"alt_big",	"",
			"alt2",	"",
			"alt2_big",	"",
			"mph",	"",
			"mph2",	"",
			"vert_speed",	"",
			"vert_speed2",	"",
			"horizont_dive",	"",
			"horizont",	"horizont_dive",
			"horizont2_dive",	"",
			"horizont2",	"horizont2_dive",
			"clockhour",	"",
			"clockminute",	"",
			"sensors_turret",	"",
			"sensors",	"sensors_turret",
			"turret",	"",
			"gun",	"turret",
			"barrels",	"gun",
			"barrel_zero",	"gun",
			"damagehide",	"",
			"rotorshaft",	"",
			"horizont_1",	"",
			"horizont_1b",	"",
			"horizont_2",	"",
			"horizont_2b",	"",
			"compass_1",	"",
			"compass_2",	"",
			"glass1",	"",
			"glass2",	"",
			"glass3",	"",
			"glass4",	"",
			"glass5",	""
		};
	};
};
class CfgModels
{
	class Default
	{
		sections[] = {};
		sectionsInherit="";
		skeletonName = "";
	};
	class AH1Z:Default
	{
		skeletonName="AH1ZSkeleton";
		sections[]=
		{
			"mainRotorStatic",
			"mainRotorBlurred",
			"tailRotorStatic",
			"tailRotorBlurred",
			"muzzleflash",
			"trup",
			"motor",
			"elektronika",
			"munice",
			"sklo predni P",
			"sklo predni L",
			"mala vrtule",
			"velka vrtule",
			"clan",
			"clan_sign",
			"podsvit pristroju",
			"zbran",
			"vez",
			"glass1",
			"glass2",
			"glass3",
			"glass4",
			"glass5"
		};
		class Animations
		{
			class damageHide
			{
				type="hide";
				source="damage";
				selection="damageHide";
			};
			
			class HRotor
			{
				type="rotation";
				source="rotorH";
				memory = 1;//by default
				selection="mainRotor";
				axis="mainrotor_axis";//"mainrotor_axis";//possibly
				minValue = 0.0;//rad 0.0
				maxValue = 1.0;//rad 57.29578
				minPhase = 0.0;//rad 0.0
				maxPhase = 1.0;//rad 57.29578
				angle0 = 0.0;//rad 0.0;
				angle1 = rad 360;//rad 0.0;
//				AxisPos[] = {0.0,0.0,0.0};
//				AxisDir[] = {6.2831855,0.0,7.564892e+028};
//				angle = 2.678536e+020;
//				axisOffset = 2.544307e+030
			};
			class HRotorB
			{
				type="rotation";
				source="rotorH";
				memory = 1;//by default
				selection="mainRotorblurred";
				axis="mainrotor_axis";//"mainrotor_axis";//possibly
				minValue = 0.0;//rad 0.0
				maxValue = 1.0;//rad 57.29578
				minPhase = 0.0;//rad 0.0
				maxPhase = 1.0;//rad 57.29578
				angle0 = 0.0;//rad 0.0;
				angle1 = rad 360;//rad 0.0;
//				AxisPos[] = {0.0,0.0,0.0};
//				AxisDir[] = {6.2831855,0.0,7.564892e+028};
//				angle = 2.678536e+020;
//				axisOffset = 2.544307e+030
			};
			class RotorShaft
			{
				type="rotation";
				source="rotorH";
				memory = 1;//by default
				selection="rotorshaft";
				axis="mainRotor_axis";//"rotorshaft_axis";//possibly
				minValue = 0.0;//rad 0.0
				maxValue = 1.0;//rad 57.29578
				minPhase = 0.0;//rad 0.0
				maxPhase = 1.0;//rad 57.29578
				angle0 = 0.0;//rad 0.0;
				angle1 = rad 360;//rad 0.0;
//				AxisPos[] = {0.0,0.0,0.0};
//				AxisDir[] = {6.2831855,0.0,7.584405e+031};
//				angle = 2.544155e+030;
//				axisOffset = 4.7428913e+030
			};
			class VRotor
			{
				type="rotation";
				source="rotorV";
				memory = 1;//by default
				animPeriod = 0;//Unknown
				selection="tailrotor";
				axis="tailrotor_axis";//"tailrotor_axis";//possibly
				minValue = 0.0;//rad 0.0
				maxValue = 1.0;//rad 57.29578
				minPhase = 0.0;//rad 0.0
				maxPhase = 1.0;//rad 57.29578
				angle0 = 0.0;//rad 0.0;
				angle1 = rad 360;//rad 0.0;
//				AxisPos[] = {0.0,0.0,0.0};
//				AxisDir[] = {6.2831855,2.8026e-045/*#DEN*/,1.8056909e+028};
//				angle = 4.8023817e+030;
//				axisOffset = 2.4846746e+027
			};
			class VRotorB :Vrotor
			{
				type="rotation";
				source="rotorV";
				memory = 1;//by default
				animPeriod = 0;//Unknown
				selection="tailrotorblurred";
				axis="tailrotor_axis";//"tailrotor_axis";//possibly
				minValue = 0.0;//rad 0.0
				maxValue = 1.0;//rad 57.29578
				minPhase = 0.0;//rad 0.0
				maxPhase = 1.0;//rad 57.29578
				angle0 = 0.0;
				angle1 = rad 360;
			};
			class MainTurret
			{
				type="rotationY";
				source="mainTurret";
				selection="Turret";
				axis="turret_axis";
				animPeriod=0;
				memory=1;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class MainGun
			{
				type="rotationX";
				source="mainGun";
				selection="gun";
				axis="gun_axis";
				animPeriod=0;
				memory=1;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class SensorTurret: MainTurret
			{
				selection="sensors_turret";
				axis="sensors_turret_axis";
			};
			class Sensors: MainGun
			{
				selection="sensors";
				axis="sensors_axis";
			};
			class 20mmBarrels
			{
				type="rotation";
				selection="Barrels";
				axis="Barrels_axis";
				angel0= 0;
				angle1="-3000 * 3.141592654";
				source="20mmBarrels";
				type="rotation";
			};
			class Stick_Pilot_Bank
			{
				type="rotation";
				source="cyclicAside";
				memory = 1;
				animPeriod = 0;
				sourceAddress="clamp";
				selection="stick";
				axis="stick_pilot_joint";
				minValue = -0.1;
				maxValue = 0.1;
				angle0 = 0.1;
				angle1 = -0.1;
			};

			class Stick_Pilot_Dive
			{
				type="rotation";
				source="cyclicForward";
				memory = 1;
				animPeriod = 0;
				sourceAddress="clamp";
				selection="stick";
				axis="stick_pilot_joint";
				minValue = -0.1;
				maxValue = 0.1;
				angle0 = -0.1;
				angle1 = 0.1;
			};
			class mainRotorDive
			{
				type="rotationX";
				source="rotorHdive";
				selection="mainRotor";
				axis="predni osa naklonu";
				memory=1;
				minValue=-1.570800;
				maxValue=1.570800;
				angle0=-1.570796;
				angle1=1.570796;
			};
			class rotorShaft_damage: damageHide
			{
				selection="rotorShaft";
			};
			class turret_damage: damageHide
			{
				selection="turret";
			};
			class tailRotor_damage: damageHide
			{
				selection="tailRotor";
			};
			class sensors_turret_damage: damageHide
			{
				selection="sensors_turret";
			};
			class mainRotor_damage: damageHide
			{
				selection="mainRotor";
			};
			class horizonDive
			{
				type="translation";
				source="horizonDive";
				selection="horizont_1";
				axis="axis_horizont_1";
				memory=1;
				minValue=-1.000000;
				maxValue=1.000000;
				offset0=-0.610000;
				offset1=0.610000;
			};
			class horizonBank
			{
				type="rotation";
				source="horizonBank";
				selection="horizont_1";
				axis="axis_r_horizont_1";
				memory=1;
				minValue="rad -360";
				maxValue="rad +360";
				angle0="rad -360";
				angle1="rad +360";
			};
			class IndicatorCompass
			{
				type="rotation";
				source="direction";
				selection="compass_1";
				axis="axis_compass_1";
				memory=1;
				minValue=-3.141593;
				maxValue=3.141593;
				angle0=-3.141593;
				angle1=3.141593;
			};
			class horizonDive2: horizonDive
			{
				selection="horizont_2";
				axis="axis_horizont_2";
			};
			class horizonBank2: horizonBank
			{
				selection="horizont_2";
				axis="axis_r_horizont_2";
				memory=1;
			};
			class horizonBank1BCK: horizonBank
			{
				selection="horizont_1b";
				axis="axis_r_horizont_1b";
				memory=1;
			};
			class horizonBank2BCK: horizonBank2
			{
				selection="horizont_2b";
				axis="axis_r_horizont_2b";
				memory=1;
			};
			class IndicatorCompass2: IndicatorCompass
			{
				selection="compass_2";
				axis="axis_compass_2";
			};
				//glass damage
				class Glass1_destruct
				{
					type="hide";
					selection="glass1";
					source="HitGlass1";
					minValue = 0; // upravit na 0.99
					maxValue = 1; // upravit na 1.0
					hidevalue = 0.99;
				};
				class Glass2_destruct:Glass1_destruct{selection="glass2";source="HitGlass2";};
				class Glass3_destruct:Glass1_destruct{selection="glass3";source="HitGlass3";};
				class Glass4_destruct:Glass1_destruct{selection="glass4";source="HitGlass4";};
				class Glass5_destruct:Glass1_destruct{selection="glass5";source="HitGlass5";};

		};
	};
};