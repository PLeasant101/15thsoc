class CfgSkeletons
{
	class M32_Base
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] =
		{
			"trigger","",
			"reload","",
			"drum","reload",
			"grenade1","drum",
			"grenade2","drum",
			"grenade3","drum",
			"grenade4","drum",
			"grenade5","drum",
			"grenade6","drum",
			"safety_catch","",
			"OP","",
			"ForeSight","",
			"BackSight",""
		};
	};
};
class CfgModels
{
class Default
	{
		sectionsInherit="";
		sections[]={};
		skeletonName="";
	};
	class ArmaMan : Default
	{
		htMin = 60;          // Minimum half-cooling time (in seconds)
		htMax = 1800;        // Maximum half-cooling time (in seconds)
		afMax = 30;          // Maximum temperature in case the model is alive (in celsius)
		mfMax = 0;           // Maximum temperature when the model is moving (in celsius)
		mFact = 1;           // Metabolism factor - number from interval <0, 1> (0 - metabolism has no influence, 1 - metabolism has full influence (no other temperature source will be considered)).
		tBody = 37;  // Metabolism temperature of the model (in celsius)

		sections[] =
		{
			"osobnost","Head_Injury","Body_Injury","l_leg_injury","l_arm_injury","r_arm_injury","r_leg_injury","injury_body", "injury_legs", "injury_hands",
			"clan","clan_sign","Camo","CamoB","Camo1","Camo2","personality","hl", "injury_head"
		};
		skeletonName = "OFP2_ManSkeleton";
	};
	class M32_Base
	{
		sections[] = {"zasleh"};
		sectionsInherit = "";		
		skeletonName = "M32_Base";
		class Animations
		{
			class OP_ROT
			{
				type="rotation";
				source="zeroing1";
				sourceAddress="loop";
				selection="OP";
				axis="OP_axis";
				minValue=0;
				maxValue=3;
				angle0="rad 0";
				angle1="rad 65";
			};
			class trigger
			{
				type = "rotation";
				source="reload";
				selection = "trigger";
				axis = "trigger_axis";
				minValue = "0";
				maxValue = ".5";
				angle0 = 0;
				angle1 = "rad 40";
			};
			class rev
			{
				type = "rotation";
				source="revolving";
				selection = "drum";
				axis = "drum_axis";
				minValue = "0";
				maxValue = "1";
				sourceadress="loop";
				angle0 = 0;
				angle1 = "rad 360";
			};
			class reload_hide1
			{
				type="hide";
				source="reloadMagazine";
				selection="grenade1";
				minValue=0;
				maxValue=.5;
				sourceAddress="mirror";
				hideValue=".2+random .8";
			};
			class reload_hide2: reload_hide1
			{
				selection="grenade2";
				hideValue=.33;
			};
			class reload_hide3: reload_hide2
			{
				selection="grenade3";
			};
			class reload_hide4: reload_hide2
			{
				selection="grenade4";
			};
			class reload_hide5: reload_hide2
			{
				selection="grenade5";
			};
			class reload_hide6: reload_hide2
			{
				selection="grenade6";
			};
		
			class reload_open : rev
			{
				source = "reloadMagazine";
				selection = "reload";
				axis = "reload_axis";
				sourceadress="clamp";
				angle0 = "0";
				angle1 = "-2.5";
				minValue="0";
				maxValue=".10";
			};
			class reload_close : reload_open
			{
				angle0 = "0";
				angle1 = "2.5";
				minValue=".9";
				maxValue="1";
			};
			class drum_wobble1:rev
			{
				type = "rotation";
				source="reloadMagazine";
				sourceadress="loop";
				minValue="0";
				maxValue=".15";
				angle0 = "0";
				angle1 = "((round(random 2))*(rad (360/6)))";
			};
			class drum_wobble2:drum_wobble1
			{
				maxValue=".3";
			};
			class drum_wobble3:drum_wobble1
			{
				maxValue=".45";
			};
			class drum_wobble4:drum_wobble1
			{
				maxValue=".6";
			};
			class drum_wobble5:drum_wobble1
			{
				maxValue=".75";
			};
			class drum_wobble6:drum_wobble1
			{
				maxValue=".9";
				angle1 = "(rad (360/6))";
			};
			class drum_wobble7:drum_wobble1
			{
				maxValue=".7";
			};
			class drum_wobble8:drum_wobble1
			{
				maxValue=".8";
			};
			class drum_wobble9:drum_wobble1
			{
				maxValue=".9";
			};
			class drum_wobble10:drum_wobble1
			{
				maxValue="1";
			};
		#define k (rad 4)
		#define wobbleAngle k
		#define wobbleAngle2 (-k)
			class reload_wobble1:reload_open
			{
				type = "rotation";
				source="reloadMagazine";
				sourceadress="clamp";
				minValue="0";
				maxValue=".1";
				angle0 = "0";
				angle1 = wobbleAngle;
			};
			class reload_wobble2:reload_wobble1
			{
				maxValue=".2";
			};
			class reload_wobble3:reload_wobble1
			{
				maxValue=".3";
			};
			class reload_wobble4:reload_wobble1
			{
				maxValue=".4";
			};
			class reload_wobble5:reload_wobble1
			{
				maxValue=".5";
			};
			class reload_wobble6:reload_wobble1
			{
				minValue=".5";
				angle0 = "0";
				angle1 = wobbleAngle2;
				maxValue=".6";
			};
			class reload_wobble7:reload_wobble6
			{
				maxValue=".7";
			};
			class reload_wobble8:reload_wobble6
			{
				maxValue=".8";
			};
			class reload_wobble9:reload_wobble6
			{
				maxValue=".9";
			};
			class reload_wobble10:reload_wobble6
			{
				maxValue="1";
			};
			
			class safety
			{
				type = "rotation";
				source="revolve";
				selection = "safety_catch";
				axis = "safety_catch_axis";
				minValue = "0.95";
				maxValue = "1";
				sourceadress="loop";
				angle0 = 0;
				angle1 = "rad 110";
			};
		};
	};
	class M32: M32_Base 
	{
	};
};