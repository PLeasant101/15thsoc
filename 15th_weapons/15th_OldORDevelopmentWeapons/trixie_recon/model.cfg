class CfgSkeletons
{
	class Default
	{
		isDiscrete=1;
		skeletonInherit="";
		skeletonBones[]={};
	};
	class recon_base: Default
	{
		skeletonBones[]=
		{
			"Magazine",
			"",
			"Bolt",
			"",
			"Iron Sights",
			"",
			"Trigger",
			"",
			"zasleh",
			"",
			"leftbipod",
			"",
			"rightbipod",
			"",
			"Backsight",
			"",
			"Frontsight",
			"",
			"siderail",
			"",
			"rail",
			"",
			"bipod",
			"",
			"charging_handle",
			""
		};
	};
	class OFP2_ManSkeleton
	{
		isDiscrete=0;
		skeletonInherit="";
		skeletonBones[]=
		{
			"Pelvis",
			"",
			"Spine",
			"Pelvis",
			"Spine1",
			"Spine",
			"Spine2",
			"Spine1",
			"Spine3",
			"Spine2",
			"Camera",
			"Pelvis",
			"weapon",
			"Spine1",
			"launcher",
			"Spine1",
			"neck",
			"Spine3",
			"neck1",
			"neck",
			"head",
			"neck1",
			"HeadCutScene",
			"head",
			"jaw",
			"head",
			"chin",
			"head",
			"jaw_rf",
			"head",
			"jaw_rm",
			"head",
			"jaw_rs",
			"head",
			"jaw_lf",
			"head",
			"jaw_lm",
			"head",
			"jaw_ls",
			"head",
			"ear_r",
			"head",
			"ear_l",
			"head",
			"lip_lc",
			"head",
			"lip_lwlb",
			"head",
			"lip_lwlf",
			"head",
			"lip_lwm",
			"head",
			"lip_lwrf",
			"head",
			"lip_lwrb",
			"head",
			"lip_rc",
			"head",
			"lip_uprb",
			"head",
			"lip_uprf",
			"head",
			"lip_upm",
			"head",
			"lip_uplf",
			"head",
			"lip_uplb",
			"head",
			"nose_tip",
			"head",
			"nose_r",
			"head",
			"nose_l",
			"head",
			"zig_lt",
			"head",
			"zig_lm",
			"head",
			"zig_lb",
			"head",
			"zig_rt",
			"head",
			"zig_rm",
			"head",
			"zig_rb",
			"head",
			"cheek_r",
			"head",
			"cheek_l",
			"head",
			"eyebrow_lb",
			"head",
			"eyebrow_lm",
			"head",
			"eyebrow_lf",
			"head",
			"corr",
			"head",
			"eyebrow_rf",
			"head",
			"eyebrow_rm",
			"head",
			"eyebrow_rb",
			"head",
			"eye_upr",
			"head",
			"eye_lwr",
			"head",
			"eye_upl",
			"head",
			"eye_lwl",
			"head",
			"cheek_rf",
			"head",
			"cheek_rm",
			"head",
			"cheek_rb",
			"head",
			"cheek_lf",
			"head",
			"cheek_lm",
			"head",
			"cheek_lb",
			"head",
			"forehead_l",
			"head",
			"forehead_m",
			"head",
			"forehead_r",
			"head",
			"l_eye",
			"head",
			"r_eye",
			"head",
			"l_pupila",
			"head",
			"r_pupila",
			"head",
			"neck_t",
			"head",
			"neck_b",
			"head",
			"neck_r",
			"head",
			"neck_l",
			"head",
			"tongue_b",
			"head",
			"tongue_m",
			"head",
			"tongue_f",
			"head",
			"LeftShoulder",
			"Spine3",
			"LeftArm",
			"LeftShoulder",
			"LeftArmRoll",
			"LeftArm",
			"LeftForeArm",
			"LeftArmRoll",
			"LeftForeArmRoll",
			"LeftForeArm",
			"LeftHand",
			"LeftForeArmRoll",
			"LeftHandRing",
			"LeftHand",
			"LeftHandRing1",
			"LeftHandRing",
			"LeftHandRing2",
			"LeftHandRing1",
			"LeftHandRing3",
			"LeftHandRing2",
			"LeftHandPinky1",
			"LeftHandRing",
			"LeftHandPinky2",
			"LeftHandPinky1",
			"LeftHandPinky3",
			"LeftHandPinky2",
			"LeftHandMiddle1",
			"LeftHand",
			"LeftHandMiddle2",
			"LeftHandMiddle1",
			"LeftHandMiddle3",
			"LeftHandMiddle2",
			"LeftHandIndex1",
			"LeftHand",
			"LeftHandIndex2",
			"LeftHandIndex1",
			"LeftHandIndex3",
			"LeftHandIndex2",
			"LeftHandThumb1",
			"LeftHand",
			"LeftHandThumb2",
			"LeftHandThumb1",
			"LeftHandThumb3",
			"LeftHandThumb2",
			"RightShoulder",
			"Spine3",
			"RightArm",
			"RightShoulder",
			"RightArmRoll",
			"RightArm",
			"RightForeArm",
			"RightArmRoll",
			"RightForeArmRoll",
			"RightForeArm",
			"RightHand",
			"RightForeArmRoll",
			"RightHandRing",
			"RightHand",
			"RightHandRing1",
			"RightHandRing",
			"RightHandRing2",
			"RightHandRing1",
			"RightHandRing3",
			"RightHandRing2",
			"RightHandPinky1",
			"RightHandRing",
			"RightHandPinky2",
			"RightHandPinky1",
			"RightHandPinky3",
			"RightHandPinky2",
			"RightHandMiddle1",
			"RightHand",
			"RightHandMiddle2",
			"RightHandMiddle1",
			"RightHandMiddle3",
			"RightHandMiddle2",
			"RightHandIndex1",
			"RightHand",
			"RightHandIndex2",
			"RightHandIndex1",
			"RightHandIndex3",
			"RightHandIndex2",
			"RightHandThumb1",
			"RightHand",
			"RightHandThumb2",
			"RightHandThumb1",
			"RightHandThumb3",
			"RightHandThumb2",
			"LeftUpLeg",
			"Pelvis",
			"LeftUpLegRoll",
			"LeftUpLeg",
			"LeftLeg",
			"LeftUpLegRoll",
			"LeftLegRoll",
			"LeftLeg",
			"LeftFoot",
			"LeftLegRoll",
			"LeftToeBase",
			"LeftFoot",
			"RightUpLeg",
			"Pelvis",
			"RightUpLegRoll",
			"RightUpLeg",
			"RightLeg",
			"RightUpLegRoll",
			"RightLegRoll",
			"RightLeg",
			"RightFoot",
			"RightLegRoll",
			"RightToeBase",
			"RightFoot"
		};
	};
};	
class CfgModels
{
	class Default
	{
		sectionsInherit="";
		sections[]={};
		skeletonName="";
	};
	class recon_base: Default
	{
		sections[]=
		{
			"zasleh",
			"Magazine",
			"Bolt",
			"leftbipod",
			"rightbipod",
			"Trigger",
			"Iron Sights",
			"Backsight",
			"Frontsight",
			"siderail",
			"rail",
			"bipod",
			"charging_handle"
		};
		skeletonName="recon_base";
		class Animations
		{
		};
	};	
 	class Trixie_M110: recon_base
	{
		class Animations
		{
		
			class Backsight_Toggle
			{
				type="rotationZ";
				source="HasOptics";
				selection="Backsight";
				axis = "Backsight_Axis";
				minValue=0.0;
				maxValue=0.3;
				minPhase=0.0;
				maxPhase=0.3;
				angle0=0;
				angle1=1.6;
			};
			class Frontsight_Toggle
			{
				type="rotationZ";
				source="HasOptics";
				selection="Frontsight";
				axis = "Frontsight_Axis";
				minValue=0.0;
				maxValue=0.3;
				minPhase=0.0;
				maxPhase=0.3;
				angle0=0;
				angle1=-1.6;
			};
			class Eject_Slide
			{
				type="translation";
				source="reload";
				selection="Bolt";
				memory=1;
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				axis="bolt_axis";
				begin="Eject_Start";
				end="Eject_End";
				offset0=0;
				offset1=0.15;
			};
			class left_bipod_side
            {
                type="rotationY";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="leftbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = -0.4;
            };
            class left_bipod_switch
            {
                type="rotationZ";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="leftbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 1.6;
            };
            class right_bipod_side
            {
                type="rotationY";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="rightbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 0.4;
            };
            class right_bipod_switch
            {
                type="rotationZ";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="rightbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 1.6;
            };
			class Eject_Empty
			{
				type="translation";
				source="isempty";
				selection="Bolt";
				memory=1;
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				axis="bolt_axis";
				begin="Eject_Start";
				end="Eject_End";
				offset0=0;
				offset1=0.15;
			};
			class magazine_reload_move_1
			{
				type="translation";
				source="reloadMagazine";
				selection="Magazine";
				axis="magazine_axis";
				minValue=0.145;
				maxValue=0.2;
				offset0=0;
				offset1=0.40000001;
			};
			class magazine_reload_move_2
			{
				type="hide";
				source="reloadMagazine";
				selection="Magazine";
				minValue=-0.4;
				maxValue=0.4;
				minPhase=-0.4;
				maxPhase=0.4;
				hideValue=0.75;
				sourceAddress="mirror";
			};
			class magazine_reload_move_3
			{
				type="translation";
				source="reloadMagazine";
				selection="Magazine";
				axis="Magazine_axis";
				minValue=0.60000002;
				maxValue=0.64999998;
				offset0=0;
				offset1=-0.40000001;
			};
			class magazine_hide
			{
				type="hide";
				source="reloadMagazine";
				selection="magazine";
				minValue=0;
				maxValue=1;
				hideValue=0.18799999;
				unhideValue=0.55000001;
			};
			class no_magazine
			{
				type="hide";
				source="hasMagazine";
				selection="magazine";
				minValue=0;
				maxValue=1;
				hideValue=0.5;
				unhideValue=-1;
			};
			class trigger_move
			{
				type="rotationZ";
				source="reload";
				selection="Trigger";
				memory=1;
				sourceAddress="clamp";
				axis = "Trigger_Axis";
				minValue=0.0;
				maxValue=0.3;
				minPhase=0.0;
				maxPhase=0.3;
				angle0=0;
				angle1=-0.512389;
			};
			class MuzzleFlashROT
 			{
 				type="rotationX";
 				source="ammoRandom";            //use ammo count as phase for animation
 				sourceAddress="loop";     //loop when phase out of bounds
 				selection="zasleh";       //selection we want to rotate
 				axis="zasleh_axis";                  //no own axis - center of rotation is computed from selection
 				centerFirstVertex=true;   //use first vertex of selection as center of rotation
 				minValue=0;
 				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
 				angle0="rad 0";
 				angle1="rad 360";
 			};
			class ironsight_hide
			{
				type="hide";
				source="hasOptics";
				selection="IronSight";
				animPeriod=0;
				minValue=0;
				maxValue=0.30000001;
				minPhase=0;
				maxPhase=0.30000001;
				hideValue=0.1;
				sourceAddress="mirror";
			};
 		};
 	};
 	class Trixie_M110_NG_Black: recon_base
	{
		class Animations
		{
		
			class Backsight_Toggle
			{
				type="rotationZ";
				source="HasOptics";
				selection="Backsight";
				axis = "Backsight_Axis";
				minValue=0.0;
				maxValue=0.3;
				minPhase=0.0;
				maxPhase=0.3;
				angle0=0;
				angle1=1.6;
			};
			class Frontsight_Toggle
			{
				type="rotationZ";
				source="HasOptics";
				selection="Frontsight";
				axis = "Frontsight_Axis";
				minValue=0.0;
				maxValue=0.3;
				minPhase=0.0;
				maxPhase=0.3;
				angle0=0;
				angle1=-1.6;
			};
			class Eject_Slide
			{
				type="translation";
				source="reload";
				selection="Bolt";
				memory=1;
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				axis="bolt_axis";
				begin="Eject_Start";
				end="Eject_End";
				offset0=0;
				offset1=0.15;
			};
			class left_bipod_side
            {
                type="rotationY";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="leftbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = -0.4;
            };
            class left_bipod_switch
            {
                type="rotationZ";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="leftbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 1.6;
            };
            class right_bipod_side
            {
                type="rotationY";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="rightbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 0.4;
            };
            class right_bipod_switch
            {
                type="rotationZ";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="rightbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 1.6;
            };
			class Eject_Empty
			{
				type="translation";
				source="isempty";
				selection="Bolt";
				memory=1;
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				axis="bolt_axis";
				begin="Eject_Start";
				end="Eject_End";
				offset0=0;
				offset1=0.15;
			};
			class magazine_reload_move_1
			{
				type="translation";
				source="reloadMagazine";
				selection="Magazine";
				axis="magazine_axis";
				minValue=0.145;
				maxValue=0.2;
				offset0=0;
				offset1=0.40000001;
			};
			class magazine_reload_move_2
			{
				type="hide";
				source="reloadMagazine";
				selection="Magazine";
				minValue=-0.4;
				maxValue=0.4;
				minPhase=-0.4;
				maxPhase=0.4;
				hideValue=0.75;
				sourceAddress="mirror";
			};
			class magazine_reload_move_3
			{
				type="translation";
				source="reloadMagazine";
				selection="Magazine";
				axis="Magazine_axis";
				minValue=0.60000002;
				maxValue=0.64999998;
				offset0=0;
				offset1=-0.40000001;
			};
			class magazine_hide
			{
				type="hide";
				source="reloadMagazine";
				selection="magazine";
				minValue=0;
				maxValue=1;
				hideValue=0.18799999;
				unhideValue=0.55000001;
			};
			class no_magazine
			{
				type="hide";
				source="hasMagazine";
				selection="magazine";
				minValue=0;
				maxValue=1;
				hideValue=0.5;
				unhideValue=-1;
			};
			class siderail_unhide
			{
				type="hide";
				source="hasAccessory";
				selection="siderail";
				animPeriod=0;
				minValue=0;
				maxValue=0.30000001;
				minPhase=0;
				maxPhase=0.30000001;
				hideValue=0;
				unHideValue=0.1;
				sourceAddress="mirror";
			};
			class trigger_move
			{
				type="rotationZ";
				source="reload";
				selection="Trigger";
				memory=1;
				sourceAddress="clamp";
				axis = "Trigger_Axis";
				minValue=0.0;
				maxValue=0.3;
				minPhase=0.0;
				maxPhase=0.3;
				angle0=0;
				angle1=-0.512389;
			};
			class MuzzleFlashROT
 			{
 				type="rotationX";
 				source="ammoRandom";            //use ammo count as phase for animation
 				sourceAddress="loop";     //loop when phase out of bounds
 				selection="zasleh";       //selection we want to rotate
 				axis="zasleh_axis";                  //no own axis - center of rotation is computed from selection
 				centerFirstVertex=true;   //use first vertex of selection as center of rotation
 				minValue=0;
 				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
 				angle0="rad 0";
 				angle1="rad 360";
 			};
 		};
 	};
 	class trixie_m40a3: recon_base
	{
		class Animations: Animations
		{
			class bolt_reload_begin
			{
				type="translation";
				source="reload";
				selection="bolt";
				axis="bolt_axis";
				memory=1;
				minValue=0.2;
				maxValue=0.5;
				offset0=0;
				offset1=1.0;
			};
			class bolt_reload_end:bolt_reload_begin
			{
				minValue=0.7;
				maxValue=0.8;
				offset0=0;
				offset1=-1.0;
			};
			class charging_handle_reload_rotation_begin
			{
				type="rotation";
				source="reload";
				selection="charging_handle";
				axis="bolt_axis";
				memory=1;
				minValue=0.0;
				maxValue=0.2;
				angle0=0;
				angle1=-1.0;
			};
			class charging_handle_reload_rotation_end:charging_handle_reload_rotation_begin
			{
				minValue=0.8;
				maxValue=1.0;
				angle0=0;
				angle1=1.0;
			};
			class charging_handle_reload_begin
			{
				type="translation";
				source="reload";
				selection="charging_handle";
				axis="bolt_axis";
				memory=1;
				minValue=0.2;
				maxValue=0.5;
				offset0=0;
				offset1=1.0;
			};
			class charging_handle_reload_end:charging_handle_reload_begin
			{
				minValue=0.7;
				maxValue=0.8;
				offset0=0;
				offset1=-1.0;
			};
			class magazine_reload_move_2
			{
				type="hide";
				source="reloadMagazine";
				selection="Magazine";
				minValue=-0.4;
				maxValue=0.4;
				minPhase=-0.4;
				maxPhase=0.4;
				hideValue=0.75;
				sourceAddress="mirror";
			};
			class left_bipod_side
            {
                type="rotationY";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="leftbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 0.4;
            };
            class left_bipod_switch
            {
                type="rotationZ";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="leftbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = -1.4;
            };
            class right_bipod_side
            {
                type="rotationY";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="rightbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = -0.4;
            };
            class right_bipod_switch
            {
                type="rotationZ";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="rightbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = -1.4;
            };
			class MuzzleFlashROT
 			{
 				type="rotationX";
 				source="ammoRandom";            //use ammo count as phase for animation
 				sourceAddress="loop";     //loop when phase out of bounds
 				selection="zasleh";       //selection we want to rotate
 				axis="zasleh_axis";                  //no own axis - center of rotation is computed from selection
 				centerFirstVertex=true;   //use first vertex of selection as center of rotation
 				minValue=0;
 				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
 				angle0="rad 0";
 				angle1="rad 360";
 			};
		};
	};
	class trixie_m40a3_NG: recon_base
	{
		class Animations: Animations
		{
			class bolt_reload_begin
			{
				type="translation";
				source="reload";
				selection="bolt";
				axis="bolt_axis";
				memory=1;
				minValue=0.2;
				maxValue=0.5;
				offset0=0;
				offset1=1.0;
			};
			class bolt_reload_end:bolt_reload_begin
			{
				minValue=0.7;
				maxValue=0.8;
				offset0=0;
				offset1=-1.0;
			};
			class charging_handle_reload_rotation_begin
			{
				type="rotation";
				source="reload";
				selection="charging_handle";
				axis="bolt_axis";
				memory=1;
				minValue=0.0;
				maxValue=0.2;
				angle0=0;
				angle1=-1.0;
			};
			class charging_handle_reload_rotation_end:charging_handle_reload_rotation_begin
			{
				minValue=0.8;
				maxValue=1.0;
				angle0=0;
				angle1=1.0;
			};
			class charging_handle_reload_begin
			{
				type="translation";
				source="reload";
				selection="charging_handle";
				axis="bolt_axis";
				memory=1;
				minValue=0.2;
				maxValue=0.5;
				offset0=0;
				offset1=1.0;
			};
			class charging_handle_reload_end:charging_handle_reload_begin
			{
				minValue=0.7;
				maxValue=0.8;
				offset0=0;
				offset1=-1.0;
			};
			class magazine_reload_move_2
			{
				type="hide";
				source="reloadMagazine";
				selection="Magazine";
				minValue=-0.4;
				maxValue=0.4;
				minPhase=-0.4;
				maxPhase=0.4;
				hideValue=0.75;
				sourceAddress="mirror";
			};
			class left_bipod_side
            {
                type="rotationY";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="leftbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 0.4;
            };
            class left_bipod_switch
            {
                type="rotationZ";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="leftbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = -1.4;
            };
            class right_bipod_side
            {
                type="rotationY";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="rightbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = -0.4;
            };
            class right_bipod_switch
            {
                type="rotationZ";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="rightbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = -1.4;
            };
            class siderail_unhide
			{
				type="hide";
				source="hasAccessory";
				selection="siderail";
				animPeriod=0;
				minValue=0;
				maxValue=0.30000001;
				minPhase=0;
				maxPhase=0.30000001;
				hideValue=0;
				unHideValue=0.1;
				sourceAddress="mirror";
			};
			class MuzzleFlashROT
 			{
 				type="rotationX";
 				source="ammoRandom";            //use ammo count as phase for animation
 				sourceAddress="loop";     //loop when phase out of bounds
 				selection="zasleh";       //selection we want to rotate
 				axis="zasleh_axis";                  //no own axis - center of rotation is computed from selection
 				centerFirstVertex=true;   //use first vertex of selection as center of rotation
 				minValue=0;
 				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
 				angle0="rad 0";
 				angle1="rad 360";
 			};
		};
	};
	class trixie_m40a3_clean: recon_base
	{
		class Animations: Animations
		{
			class bolt_reload_begin
			{
				type="translation";
				source="reload";
				selection="bolt";
				axis="bolt_axis";
				memory=1;
				minValue=0.2;
				maxValue=0.5;
				offset0=0;
				offset1=1.0;
			};
			class bolt_reload_end:bolt_reload_begin
			{
				minValue=0.7;
				maxValue=0.8;
				offset0=0;
				offset1=-1.0;
			};
			class charging_handle_reload_rotation_begin
			{
				type="rotation";
				source="reload";
				selection="charging_handle";
				axis="bolt_axis";
				memory=1;
				minValue=0.0;
				maxValue=0.2;
				angle0=0;
				angle1=-1.0;
			};
			class charging_handle_reload_rotation_end:charging_handle_reload_rotation_begin
			{
				minValue=0.8;
				maxValue=1.0;
				angle0=0;
				angle1=1.0;
			};
			class charging_handle_reload_begin
			{
				type="translation";
				source="reload";
				selection="charging_handle";
				axis="bolt_axis";
				memory=1;
				minValue=0.2;
				maxValue=0.5;
				offset0=0;
				offset1=1.0;
			};
			class charging_handle_reload_end:charging_handle_reload_begin
			{
				minValue=0.7;
				maxValue=0.8;
				offset0=0;
				offset1=-1.0;
			};
			class magazine_reload_move_2
			{
				type="hide";
				source="reloadMagazine";
				selection="Magazine";
				minValue=-0.4;
				maxValue=0.4;
				minPhase=-0.4;
				maxPhase=0.4;
				hideValue=0.75;
				sourceAddress="mirror";
			};
            class siderail_unhide
			{
				type="hide";
				source="hasAccessory";
				selection="siderail";
				animPeriod=0;
				minValue=0;
				maxValue=0.30000001;
				minPhase=0;
				maxPhase=0.30000001;
				hideValue=0;
				unHideValue=0.1;
				sourceAddress="mirror";
			};
			class MuzzleFlashROT
 			{
 				type="rotationX";
 				source="ammoRandom";            //use ammo count as phase for animation
 				sourceAddress="loop";     //loop when phase out of bounds
 				selection="zasleh";       //selection we want to rotate
 				axis="zasleh_axis";                  //no own axis - center of rotation is computed from selection
 				centerFirstVertex=true;   //use first vertex of selection as center of rotation
 				minValue=0;
 				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
 				angle0="rad 0";
 				angle1="rad 360";
 			};
		};
	};
    class Trixie_M107: recon_base
	{
		class Animations
		{

			class Eject_Slide
			{
				type="translation";
				source="reload";
				selection="Bolt";
				memory=1;
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				axis="bolt_axis";
				begn="Eject_Start";
				end="Eject_End";
				offset0=0;
				offset1=0.15;
			};
			class left_bipod_side
            {
                type="rotationY";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="leftbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = -0.5;
            };
            class left_bipod_switch
            {
                type="rotationZ";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="leftbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 1.6;
            };
            class right_bipod_side
            {
                type="rotationY";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="rightbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 0.5;
            };
            class right_bipod_switch
            {
                type="rotationZ";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="rightbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 1.6;
            };
			class Eject_Empty
			{
				type="translation";
				source="isempty";
				selection="Bolt";
				memory=1;
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				axis="bolt_axis";
				begin="Eject_Start";
				end="Eject_End";
				offset0=0;
				offset1=0.15;
			};
			class magazine_reload_move_1
			{
				type="translation";
				source="reloadMagazine";
				selection="Magazine";
				axis="magazine_axis";
				minValue=0.145;
				maxValue=0.2;
				offset0=0;
				offset1=0.40000001;
			};
			class magazine_reload_move_2
			{
				type="hide";
				source="reloadMagazine";
				selection="Magazine";
				minValue=-0.4;
				maxValue=0.4;
				minPhase=-0.4;
				maxPhase=0.4;
				hideValue=0.75;
				sourceAddress="mirror";
			};
			class magazine_reload_move_3
			{
				type="translation";
				source="reloadMagazine";
				selection="Magazine";
				axis="Magazine_axis";
				minValue=0.60000002;
				maxValue=0.64999998;
				offset0=0;
				offset1=-0.40000001;
			};
			class magazine_hide
			{
				type="hide";
				source="reloadMagazine";
				selection="magazine";
				minValue=0;
				maxValue=1;
				hideValue=0.18799999;
				unhideValue=0.55000001;
			};
			class no_magazine
			{
				type="hide";
				source="hasMagazine";
				selection="magazine";
				minValue=0;
				maxValue=1;
				hideValue=0.5;
				unhideValue=-1;
			};
			class trigger_move
			{
				type="rotationZ";
				source="reload";
				selection="Trigger";
				memory=1;
				sourceAddress="clamp";
				axis = "Trigger_Axis";
				minValue=0.0;
				maxValue=0.3;
				minPhase=0.0;
				maxPhase=0.3;
				angle0=0;
				angle1=-0.512389;
			};
			class siderail_unhide
			{
				type="hide";
				source="hasAccessory";
				selection="siderail";
				animPeriod=0;
				minValue=0;
				maxValue=0.30000001;
				minPhase=0;
				maxPhase=0.30000001;
				hideValue=0;
				unHideValue=0.1;
				sourceAddress="mirror";
			};
			class MuzzleFlashROT
 			{
 				type="rotationX";
 				source="ammoRandom";            //use ammo count as phase for animation
 				sourceAddress="loop";     //loop when phase out of bounds
 				selection="zasleh";       //selection we want to rotate
 				axis="zasleh_axis";                  //no own axis - center of rotation is computed from selection
 				centerFirstVertex=true;   //use first vertex of selection as center of rotation
 				minValue=0;
 				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
 				angle0="rad 0";
 				angle1="rad 360";
 			};
 		};
 	};
 	class Trixie_M107_Black: recon_base
	{
		class Animations
		{

			class Eject_Slide
			{
				type="translation";
				source="reload";
				selection="Bolt";
				memory=1;
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				axis="bolt_axis";
				begin="Eject_Start";
				end="Eject_End";
				offset0=0;
				offset1=0.15;
			};
			class left_bipod_side
            {
                type="rotationY";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="leftbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = -0.5;
            };
            class left_bipod_switch
            {
                type="rotationZ";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="leftbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 1.6;
            };
            class right_bipod_side
            {
                type="rotationY";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="rightbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 0.5;
            };
            class right_bipod_switch
            {
                type="rotationZ";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="rightbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 1.6;
            };
			class Eject_Empty
			{
				type="translation";
				source="isempty";
				selection="Bolt";
				memory=1;
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				axis="bolt_axis";
				begin="Eject_Start";
				end="Eject_End";
				offset0=0;
				offset1=0.15;
			};
			class magazine_reload_move_1
			{
				type="translation";
				source="reloadMagazine";
				selection="Magazine";
				axis="magazine_axis";
				minValue=0.145;
				maxValue=0.2;
				offset0=0;
				offset1=0.40000001;
			};
			class magazine_reload_move_2
			{
				type="hide";
				source="reloadMagazine";
				selection="Magazine";
				minValue=-0.4;
				maxValue=0.4;
				minPhase=-0.4;
				maxPhase=0.4;
				hideValue=0.75;
				sourceAddress="mirror";
			};
			class magazine_reload_move_3
			{
				type="translation";
				source="reloadMagazine";
				selection="Magazine";
				axis="Magazine_axis";
				minValue=0.60000002;
				maxValue=0.64999998;
				offset0=0;
				offset1=-0.40000001;
			};
			class magazine_hide
			{
				type="hide";
				source="reloadMagazine";
				selection="magazine";
				minValue=0;
				maxValue=1;
				hideValue=0.18799999;
				unhideValue=0.55000001;
			};
			class no_magazine
			{
				type="hide";
				source="hasMagazine";
				selection="magazine";
				minValue=0;
				maxValue=1;
				hideValue=0.5;
				unhideValue=-1;
			};
			class trigger_move
			{
				type="rotationZ";
				source="reload";
				selection="Trigger";
				memory=1;
				sourceAddress="clamp";
				axis = "Trigger_Axis";
				minValue=0.0;
				maxValue=0.3;
				minPhase=0.0;
				maxPhase=0.3;
				angle0=0;
				angle1=-0.512389;
			};
			class siderail_unhide
			{
				type="hide";
				source="hasAccessory";
				selection="siderail";
				animPeriod=0;
				minValue=0;
				maxValue=0.30000001;
				minPhase=0;
				maxPhase=0.30000001;
				hideValue=0;
				unHideValue=0.1;
				sourceAddress="mirror";
			};
			class MuzzleFlashROT
 			{
 				type="rotationX";
 				source="ammoRandom";            //use ammo count as phase for animation
 				sourceAddress="loop";     //loop when phase out of bounds
 				selection="zasleh";       //selection we want to rotate
 				axis="zasleh_axis";                  //no own axis - center of rotation is computed from selection
 				centerFirstVertex=true;   //use first vertex of selection as center of rotation
 				minValue=0;
 				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
 				angle0="rad 0";
 				angle1="rad 360";
 			};
 		};
 	};
 	class Trixie_M107_Green: recon_base
	{
		class Animations
		{

			class Eject_Slide
			{
				type="translation";
				source="reload";
				selection="Bolt";
				memory=1;
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				axis="bolt_axis";
				begin="Eject_Start";
				end="Eject_End";
				offset0=0;
				offset1=0.15;
			};
			class left_bipod_side
            {
                type="rotationY";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="leftbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = -0.5;
            };
            class left_bipod_switch
            {
                type="rotationZ";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="leftbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 1.6;
            };
            class right_bipod_side
            {
                type="rotationY";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="rightbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 0.5;
            };
            class right_bipod_switch
            {
                type="rotationZ";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="rightbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 1.6;
            };
			class Eject_Empty
			{
				type="translation";
				source="isempty";
				selection="Bolt";
				memory=1;
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				axis="bolt_axis";
				begin="Eject_Start";
				end="Eject_End";
				offset0=0;
				offset1=0.15;
			};
			class magazine_reload_move_1
			{
				type="translation";
				source="reloadMagazine";
				selection="Magazine";
				axis="magazine_axis";
				minValue=0.145;
				maxValue=0.2;
				offset0=0;
				offset1=0.40000001;
			};
			class magazine_reload_move_2
			{
				type="hide";
				source="reloadMagazine";
				selection="Magazine";
				minValue=-0.4;
				maxValue=0.4;
				minPhase=-0.4;
				maxPhase=0.4;
				hideValue=0.75;
				sourceAddress="mirror";
			};
			class magazine_reload_move_3
			{
				type="translation";
				source="reloadMagazine";
				selection="Magazine";
				axis="Magazine_axis";
				minValue=0.60000002;
				maxValue=0.64999998;
				offset0=0;
				offset1=-0.40000001;
			};
			class magazine_hide
			{
				type="hide";
				source="reloadMagazine";
				selection="magazine";
				minValue=0;
				maxValue=1;
				hideValue=0.18799999;
				unhideValue=0.55000001;
			};
			class no_magazine
			{
				type="hide";
				source="hasMagazine";
				selection="magazine";
				minValue=0;
				maxValue=1;
				hideValue=0.5;
				unhideValue=-1;
			};
			class trigger_move
			{
				type="rotationZ";
				source="reload";
				selection="Trigger";
				memory=1;
				sourceAddress="clamp";
				axis = "Trigger_Axis";
				minValue=0.0;
				maxValue=0.3;
				minPhase=0.0;
				maxPhase=0.3;
				angle0=0;
				angle1=-0.512389;
			};
			class siderail_unhide
			{
				type="hide";
				source="hasAccessory";
				selection="siderail";
				animPeriod=0;
				minValue=0;
				maxValue=0.30000001;
				minPhase=0;
				maxPhase=0.30000001;
				hideValue=0;
				unHideValue=0.1;
				sourceAddress="mirror";
			};
			class MuzzleFlashROT
 			{
 				type="rotationX";
 				source="ammoRandom";            //use ammo count as phase for animation
 				sourceAddress="loop";     //loop when phase out of bounds
 				selection="zasleh";       //selection we want to rotate
 				axis="zasleh_axis";                  //no own axis - center of rotation is computed from selection
 				centerFirstVertex=true;   //use first vertex of selection as center of rotation
 				minValue=0;
 				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
 				angle0="rad 0";
 				angle1="rad 360";
 			};
 		};
 	};
 	class Trixie_MK12: recon_base
	{
		class Animations
		{
			class Backsight_Toggle
			{
				type="rotationZ";
				source="HasOptics";
				selection="Backsight";
				axis = "Backsight_Axis";
				minValue=0.0;
				maxValue=0.3;
				minPhase=0.0;
				maxPhase=0.3;
				angle0=0;
				angle1=1.6;
			};
			class Frontsight_Toggle
			{
				type="rotationZ";
				source="HasOptics";
				selection="Frontsight";
				axis = "Frontsight_Axis";
				minValue=0.0;
				maxValue=0.3;
				minPhase=0.0;
				maxPhase=0.3;
				angle0=0;
				angle1=1.6;
			};
			class Eject_Slide
			{
				type="translation";
				source="reload";
				selection="Bolt";
				memory=1;
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				axis="bolt_axis";
				begin="Eject_Start";
				end="Eject_End";
				offset0=0;
				offset1=0.15;
			};
			class left_bipod_side
            {
                type="rotationY";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="leftbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = 0.4;
            };
            class left_bipod_switch
            {
                type="rotationZ";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="leftbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = -1.4;
            };
            class right_bipod_side
            {
                type="rotationY";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="rightbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = -0.4;
            };
            class right_bipod_switch
            {
                type="rotationZ";
                source="weaponMode";
                memory = 1;
                animPeriod = 0;
                selection="rightbipod";
                axis="bipod_axis";
                minValue = 0.0;
                maxValue = 0.1;
                minPhase = 0.0;
                maxPhase = 0.1;
                angle0 = 0;
                angle1 = -1.4;
            };
			class Eject_Empty
			{
				type="translation";
				source="isempty";
				selection="Bolt";
				memory=1;
				sourceAddress="clamp";
				minValue=0;
				maxValue=1;
				axis="bolt_axis";
				begin="Eject_Start";
				end="Eject_End";
				offset0=0;
				offset1=0.15;
			};
			class magazine_reload_move_1
			{
				type="translation";
				source="reloadMagazine";
				selection="Magazine";
				axis="magazine_axis";
				minValue=0.145;
				maxValue=0.2;
				offset0=0;
				offset1=0.40000001;
			};
			class magazine_reload_move_2
			{
				type="hide";
				source="reloadMagazine";
				selection="Magazine";
				minValue=-0.4;
				maxValue=0.4;
				minPhase=-0.4;
				maxPhase=0.4;
				hideValue=0.75;
				sourceAddress="mirror";
			};
			class magazine_reload_move_3
			{
				type="translation";
				source="reloadMagazine";
				selection="Magazine";
				axis="Magazine_axis";
				minValue=0.60000002;
				maxValue=0.64999998;
				offset0=0;
				offset1=-0.40000001;
			};
			class magazine_hide
			{
				type="hide";
				source="reloadMagazine";
				selection="magazine";
				minValue=0;
				maxValue=1;
				hideValue=0.18799999;
				unhideValue=0.55000001;
			};
			class no_magazine
			{
				type="hide";
				source="hasMagazine";
				selection="magazine";
				minValue=0;
				maxValue=1;
				hideValue=0.5;
				unhideValue=-1;
			};
			class trigger_move
			{
				type="rotationZ";
				source="reload";
				selection="Trigger";
				memory=1;
				sourceAddress="clamp";
				axis = "Trigger_Axis";
				minValue=0.0;
				maxValue=0.3;
				minPhase=0.0;
				maxPhase=0.3;
				angle0=0;
				angle1=-0.512389;
			};
			class MuzzleFlashROT
 			{
 				type="rotationX";
 				source="ammoRandom";            //use ammo count as phase for animation
 				sourceAddress="loop";     //loop when phase out of bounds
 				selection="zasleh";       //selection we want to rotate
 				axis="zasleh_axis";                  //no own axis - center of rotation is computed from selection
 				centerFirstVertex=true;   //use first vertex of selection as center of rotation
 				minValue=0;
 				maxValue=4;               //rotation angle will be 360/4 = 90 degrees
 				angle0="rad 0";
 				angle1="rad 360";
 			};
 		};
 	};
};